from __future__ import annotations
import logging
from typing import Any

logger = logging.getLogger(__name__)

def test_ollama_connection(llm: Any) -> bool:
    """Tests the Ollama connection and model runtime."""
    if not llm:
        logger.error("LLM not provided for Ollama test.")
        return False

    try:
        logger.info("Attempting to invoke Ollama for a test query...")
        # A simple query to test the model
        response = llm.invoke("Say 'hello' in one word.")
        logger.info(f"Ollama test query successful. Response: {response}")
        if "hello" in response.content.lower():
            logger.info("Ollama test passed: received expected response.")
            return True
        else:
            logger.warning(f"Ollama test passed, but unexpected response content: {response.content}")
            return True # Still consider it a pass if connection is made and response received
    except Exception as e:
        logger.error(f"Ollama connection or model runtime test failed: {e}")
        return False

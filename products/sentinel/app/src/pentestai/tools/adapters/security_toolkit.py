
from typing import Optional, List
from pentestai.models.persona_results import Finding
import os

def _mk(t,d,s,file=None,rec=None,ev=None):
    return Finding(title=t, description=d, severity=s, file=file, recommendation=rec, evidence=ev)

class SecurityToolkit:
    @staticmethod
    def run_static_scan(repo_path: Optional[str]=None) -> List[Finding]:
        if repo_path and os.path.exists(repo_path):
            return [_mk("Static scan stub","Static scan placeholder","medium")]
        return [_mk("No repo","No repo provided","low")]

    @staticmethod
    def run_secret_scan(repo_path: Optional[str]=None) -> List[Finding]:
        if repo_path and os.path.exists(repo_path):
            return [_mk("Secret-scan heuristic","Heuristic secret scan","high", rec="Run git-secrets / truffleHog")]
        return [_mk("No repo","No repo provided","low")]

    @staticmethod
    def run_dep_audit(repo_path: Optional[str]=None) -> List[Finding]:
        return [_mk("Dep audit stub","Dependency audit placeholder","medium", rec="Run safety / npm audit / Snyk")]

    @staticmethod
    def run_apk_analysis(apk_path: Optional[str]=None, deep: bool=False) -> List[Finding]:
        if apk_path and os.path.exists(apk_path):
            return [_mk("APK analysis stub","APK deep" if deep else "APK light","high" if deep else "medium")]
        return [_mk("No apk","No apk provided","low")]

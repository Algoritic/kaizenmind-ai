
from typing import Optional, List, Tuple
from pentestai.models.persona_results import Finding
import os

def _mk(t,d,s,rec=None):
    return Finding(title=t, description=d, severity=s, recommendation=rec)

class CodeQualityToolkit:
    @staticmethod
    def compute_metrics(repo_path: Optional[str]=None) -> Tuple[dict, List[Finding]]:
        if repo_path and os.path.exists(repo_path):
            return {"lint":"ok"}, []
        return {"lint":"no-repo"}, [_mk("No repo","No repo provided for linting","low")]

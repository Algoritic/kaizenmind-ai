import argparse
import logging
from pentestai.controllers import run_pipeline
from pentestai.tools.repo_fetch import clone_git
from pentestai.config import RuntimeConfig, setup_logging

logger = logging.getLogger(__name__)

def cli():
    cfg = RuntimeConfig()
    setup_logging(cfg.logging)
    logger.info("PentestAI CLI started.")

    p = argparse.ArgumentParser(description="PentestAI agent system")
    p.add_argument("--repo", help="Path to local repo (optional)")
    p.add_argument("--git", help="Git URL to clone (optional)")
    p.add_argument("--branch", help="Git branch (optional)")
    p.add_argument("--apk", help="Path to Android APK (optional)")
    p.add_argument("--targets", nargs="*", help="Targets for pentest (hostnames/IPs)", default=[])
    p.add_argument("--out", default="artifacts", help="Output directory")
    args = p.parse_args()

    repo_path = args.repo
    if args.git and not repo_path:
        repo_path = clone_git(args.git, args.branch)

    res = run_pipeline(repo_path=repo_path, apk_path=args.apk, targets=args.targets, out_dir=args.out)
    print("Run ID:", res["run_id"])
    print("Report JSON:", res["report_json"])
    print("Report HTML:", res["report_html"])

if __name__ == "__main__":
    cli()